2025-02-08 08:23:49,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-08 08:23:49,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-08 08:23:49,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-08 08:23:49,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-08 08:32:18,860:INFO:PyCaret ClassificationExperiment
2025-02-08 08:32:18,860:INFO:Logging name: clf-default-name
2025-02-08 08:32:18,861:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-08 08:32:18,861:INFO:version 3.3.2
2025-02-08 08:32:18,861:INFO:Initializing setup()
2025-02-08 08:32:18,861:INFO:self.USI: 22dd
2025-02-08 08:32:18,861:INFO:self._variable_keys: {'seed', 'X', 'target_param', 'gpu_n_jobs_param', 'gpu_param', 'fix_imbalance', 'is_multiclass', 'fold_groups_param', 'memory', 'exp_name_log', 'n_jobs_param', 'idx', 'log_plots_param', 'fold_shuffle_param', '_ml_usecase', 'y_train', 'data', 'y_test', 'X_test', 'y', 'html_param', 'logging_param', 'fold_generator', 'USI', '_available_plots', 'pipeline', 'X_train', 'exp_id'}
2025-02-08 08:32:18,861:INFO:Checking environment
2025-02-08 08:32:18,861:INFO:python_version: 3.11.9
2025-02-08 08:32:18,861:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-02-08 08:32:18,861:INFO:machine: AMD64
2025-02-08 08:32:18,861:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-08 08:32:18,866:INFO:Memory: svmem(total=16547905536, available=6519369728, percent=60.6, used=10028535808, free=6519369728)
2025-02-08 08:32:18,866:INFO:Physical Core: 6
2025-02-08 08:32:18,866:INFO:Logical Core: 12
2025-02-08 08:32:18,866:INFO:Checking libraries
2025-02-08 08:32:18,866:INFO:System:
2025-02-08 08:32:18,866:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-02-08 08:32:18,866:INFO:executable: C:\Users\Matheus\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\python.exe
2025-02-08 08:32:18,866:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-08 08:32:18,866:INFO:PyCaret required dependencies:
2025-02-08 08:32:19,262:INFO:                 pip: 24.0
2025-02-08 08:32:19,262:INFO:          setuptools: 65.5.0
2025-02-08 08:32:19,262:INFO:             pycaret: 3.3.2
2025-02-08 08:32:19,263:INFO:             IPython: 8.31.0
2025-02-08 08:32:19,263:INFO:          ipywidgets: 8.1.5
2025-02-08 08:32:19,263:INFO:                tqdm: 4.67.1
2025-02-08 08:32:19,263:INFO:               numpy: 1.26.4
2025-02-08 08:32:19,263:INFO:              pandas: 2.1.4
2025-02-08 08:32:19,263:INFO:              jinja2: 3.1.5
2025-02-08 08:32:19,263:INFO:               scipy: 1.11.4
2025-02-08 08:32:19,263:INFO:              joblib: 1.3.2
2025-02-08 08:32:19,263:INFO:             sklearn: 1.4.2
2025-02-08 08:32:19,263:INFO:                pyod: 2.0.3
2025-02-08 08:32:19,263:INFO:            imblearn: 0.13.0
2025-02-08 08:32:19,263:INFO:   category_encoders: 2.7.0
2025-02-08 08:32:19,263:INFO:            lightgbm: 4.5.0
2025-02-08 08:32:19,263:INFO:               numba: 0.61.0
2025-02-08 08:32:19,263:INFO:            requests: 2.32.3
2025-02-08 08:32:19,263:INFO:          matplotlib: 3.7.5
2025-02-08 08:32:19,263:INFO:          scikitplot: 0.3.7
2025-02-08 08:32:19,263:INFO:         yellowbrick: 1.5
2025-02-08 08:32:19,263:INFO:              plotly: 5.24.1
2025-02-08 08:32:19,263:INFO:    plotly-resampler: Not installed
2025-02-08 08:32:19,263:INFO:             kaleido: 0.2.1
2025-02-08 08:32:19,263:INFO:           schemdraw: 0.15
2025-02-08 08:32:19,263:INFO:         statsmodels: 0.14.4
2025-02-08 08:32:19,263:INFO:              sktime: 0.26.0
2025-02-08 08:32:19,263:INFO:               tbats: 1.1.3
2025-02-08 08:32:19,263:INFO:            pmdarima: 2.0.4
2025-02-08 08:32:19,263:INFO:              psutil: 6.1.1
2025-02-08 08:32:19,263:INFO:          markupsafe: 3.0.2
2025-02-08 08:32:19,264:INFO:             pickle5: Not installed
2025-02-08 08:32:19,264:INFO:         cloudpickle: 3.1.1
2025-02-08 08:32:19,264:INFO:         deprecation: 2.1.0
2025-02-08 08:32:19,264:INFO:              xxhash: 3.5.0
2025-02-08 08:32:19,264:INFO:           wurlitzer: Not installed
2025-02-08 08:32:19,264:INFO:PyCaret optional dependencies:
2025-02-08 08:32:19,281:INFO:                shap: Not installed
2025-02-08 08:32:19,281:INFO:           interpret: Not installed
2025-02-08 08:32:19,281:INFO:                umap: Not installed
2025-02-08 08:32:19,281:INFO:     ydata_profiling: Not installed
2025-02-08 08:32:19,281:INFO:  explainerdashboard: Not installed
2025-02-08 08:32:19,281:INFO:             autoviz: Not installed
2025-02-08 08:32:19,281:INFO:           fairlearn: Not installed
2025-02-08 08:32:19,282:INFO:          deepchecks: Not installed
2025-02-08 08:32:19,282:INFO:             xgboost: Not installed
2025-02-08 08:32:19,282:INFO:            catboost: Not installed
2025-02-08 08:32:19,282:INFO:              kmodes: Not installed
2025-02-08 08:32:19,282:INFO:             mlxtend: Not installed
2025-02-08 08:32:19,282:INFO:       statsforecast: Not installed
2025-02-08 08:32:19,282:INFO:        tune_sklearn: Not installed
2025-02-08 08:32:19,282:INFO:                 ray: Not installed
2025-02-08 08:32:19,282:INFO:            hyperopt: Not installed
2025-02-08 08:32:19,282:INFO:              optuna: Not installed
2025-02-08 08:32:19,282:INFO:               skopt: Not installed
2025-02-08 08:32:19,282:INFO:              mlflow: Not installed
2025-02-08 08:32:19,282:INFO:              gradio: Not installed
2025-02-08 08:32:19,282:INFO:             fastapi: Not installed
2025-02-08 08:32:19,282:INFO:             uvicorn: Not installed
2025-02-08 08:32:19,282:INFO:              m2cgen: Not installed
2025-02-08 08:32:19,282:INFO:           evidently: Not installed
2025-02-08 08:32:19,282:INFO:               fugue: Not installed
2025-02-08 08:32:19,282:INFO:           streamlit: Not installed
2025-02-08 08:32:19,282:INFO:             prophet: Not installed
2025-02-08 08:32:19,282:INFO:None
2025-02-08 08:32:19,282:INFO:Set up data.
2025-02-08 08:32:19,401:INFO:Set up folding strategy.
2025-02-08 08:32:19,401:INFO:Set up train/test split.
2025-02-08 08:32:19,926:INFO:Set up index.
2025-02-08 08:32:19,964:INFO:Assigning column types.
2025-02-08 08:32:20,102:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-08 08:32:20,151:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,324:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-08 08:32:20,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-08 08:32:20,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,484:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-08 08:32:20,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:20,659:INFO:Preparing preprocessing pipeline...
2025-02-08 08:32:20,688:INFO:Set up simple imputation.
2025-02-08 08:32:20,893:INFO:Set up encoding of ordinal features.
2025-02-08 08:32:21,094:INFO:Set up encoding of categorical features.
2025-02-08 08:32:21,097:INFO:Set up imbalanced handling.
2025-02-08 08:32:21,097:INFO:Set up feature normalization.
2025-02-08 08:32:25,687:INFO:Finished creating preprocessing pipeline.
2025-02-08 08:32:25,735:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-02-08 08:32:25,735:INFO:Creating final display dataframe.
2025-02-08 08:32:30,233:INFO:Setup _display_container:                     Description             Value
0                    Session id              6672
1                        Target             fraud
2                   Target type            Binary
3           Original data shape      (1000000, 8)
4        Transformed data shape      (1577636, 8)
5   Transformed train set shape      (1277636, 8)
6    Transformed test set shape       (300000, 8)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              22dd
2025-02-08 08:32:30,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:30,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:30,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:30,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-08 08:32:30,404:INFO:setup() successfully completed in 11.55s...............
2025-02-08 08:32:36,650:INFO:Initializing compare_models()
2025-02-08 08:32:36,650:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-08 08:32:36,650:INFO:Checking exceptions
2025-02-08 08:32:36,845:INFO:Preparing display monitor
2025-02-08 08:32:36,880:INFO:Initializing Logistic Regression
2025-02-08 08:32:36,880:INFO:Total runtime is 9.361902872721354e-06 minutes
2025-02-08 08:32:36,887:INFO:SubProcess create_model() called ==================================
2025-02-08 08:32:36,887:INFO:Initializing create_model()
2025-02-08 08:32:36,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:32:36,888:INFO:Checking exceptions
2025-02-08 08:32:36,888:INFO:Importing libraries
2025-02-08 08:32:36,888:INFO:Copying training dataset
2025-02-08 08:32:37,315:INFO:Defining folds
2025-02-08 08:32:37,315:INFO:Declaring metric variables
2025-02-08 08:32:37,317:INFO:Importing untrained model
2025-02-08 08:32:37,321:INFO:Logistic Regression Imported successfully
2025-02-08 08:32:37,327:INFO:Starting cross validation
2025-02-08 08:32:37,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:32:58,722:INFO:Calculating mean and std
2025-02-08 08:32:58,722:INFO:Creating metrics dataframe
2025-02-08 08:32:58,726:INFO:Uploading results into container
2025-02-08 08:32:58,726:INFO:Uploading model into container now
2025-02-08 08:32:58,727:INFO:_master_model_container: 1
2025-02-08 08:32:58,727:INFO:_display_container: 2
2025-02-08 08:32:58,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6672, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-08 08:32:58,728:INFO:create_model() successfully completed......................................
2025-02-08 08:32:58,857:INFO:SubProcess create_model() end ==================================
2025-02-08 08:32:58,857:INFO:Creating metrics dataframe
2025-02-08 08:32:58,863:INFO:Initializing K Neighbors Classifier
2025-02-08 08:32:58,863:INFO:Total runtime is 0.3663937290509542 minutes
2025-02-08 08:32:58,867:INFO:SubProcess create_model() called ==================================
2025-02-08 08:32:58,868:INFO:Initializing create_model()
2025-02-08 08:32:58,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:32:58,868:INFO:Checking exceptions
2025-02-08 08:32:58,868:INFO:Importing libraries
2025-02-08 08:32:58,868:INFO:Copying training dataset
2025-02-08 08:32:59,310:INFO:Defining folds
2025-02-08 08:32:59,310:INFO:Declaring metric variables
2025-02-08 08:32:59,314:INFO:Importing untrained model
2025-02-08 08:32:59,320:INFO:K Neighbors Classifier Imported successfully
2025-02-08 08:32:59,327:INFO:Starting cross validation
2025-02-08 08:32:59,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:34:31,062:INFO:Calculating mean and std
2025-02-08 08:34:31,063:INFO:Creating metrics dataframe
2025-02-08 08:34:31,066:INFO:Uploading results into container
2025-02-08 08:34:31,068:INFO:Uploading model into container now
2025-02-08 08:34:31,069:INFO:_master_model_container: 2
2025-02-08 08:34:31,069:INFO:_display_container: 2
2025-02-08 08:34:31,069:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-08 08:34:31,070:INFO:create_model() successfully completed......................................
2025-02-08 08:34:31,199:INFO:SubProcess create_model() end ==================================
2025-02-08 08:34:31,199:INFO:Creating metrics dataframe
2025-02-08 08:34:31,210:INFO:Initializing Naive Bayes
2025-02-08 08:34:31,210:INFO:Total runtime is 1.9055073738098145 minutes
2025-02-08 08:34:31,215:INFO:SubProcess create_model() called ==================================
2025-02-08 08:34:31,215:INFO:Initializing create_model()
2025-02-08 08:34:31,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:34:31,216:INFO:Checking exceptions
2025-02-08 08:34:31,216:INFO:Importing libraries
2025-02-08 08:34:31,216:INFO:Copying training dataset
2025-02-08 08:34:31,655:INFO:Defining folds
2025-02-08 08:34:31,656:INFO:Declaring metric variables
2025-02-08 08:34:31,660:INFO:Importing untrained model
2025-02-08 08:34:31,664:INFO:Naive Bayes Imported successfully
2025-02-08 08:34:31,675:INFO:Starting cross validation
2025-02-08 08:34:31,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:34:44,655:INFO:Calculating mean and std
2025-02-08 08:34:44,657:INFO:Creating metrics dataframe
2025-02-08 08:34:44,660:INFO:Uploading results into container
2025-02-08 08:34:44,662:INFO:Uploading model into container now
2025-02-08 08:34:44,663:INFO:_master_model_container: 3
2025-02-08 08:34:44,663:INFO:_display_container: 2
2025-02-08 08:34:44,663:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-08 08:34:44,664:INFO:create_model() successfully completed......................................
2025-02-08 08:34:44,773:INFO:SubProcess create_model() end ==================================
2025-02-08 08:34:44,774:INFO:Creating metrics dataframe
2025-02-08 08:34:44,782:INFO:Initializing Decision Tree Classifier
2025-02-08 08:34:44,783:INFO:Total runtime is 2.1317197759946187 minutes
2025-02-08 08:34:44,787:INFO:SubProcess create_model() called ==================================
2025-02-08 08:34:44,788:INFO:Initializing create_model()
2025-02-08 08:34:44,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:34:44,789:INFO:Checking exceptions
2025-02-08 08:34:44,789:INFO:Importing libraries
2025-02-08 08:34:44,789:INFO:Copying training dataset
2025-02-08 08:34:45,282:INFO:Defining folds
2025-02-08 08:34:45,282:INFO:Declaring metric variables
2025-02-08 08:34:45,288:INFO:Importing untrained model
2025-02-08 08:34:45,295:INFO:Decision Tree Classifier Imported successfully
2025-02-08 08:34:45,302:INFO:Starting cross validation
2025-02-08 08:34:45,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:35:04,869:INFO:Calculating mean and std
2025-02-08 08:35:04,870:INFO:Creating metrics dataframe
2025-02-08 08:35:04,871:INFO:Uploading results into container
2025-02-08 08:35:04,872:INFO:Uploading model into container now
2025-02-08 08:35:04,872:INFO:_master_model_container: 4
2025-02-08 08:35:04,872:INFO:_display_container: 2
2025-02-08 08:35:04,873:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 08:35:04,873:INFO:create_model() successfully completed......................................
2025-02-08 08:35:04,960:INFO:SubProcess create_model() end ==================================
2025-02-08 08:35:04,960:INFO:Creating metrics dataframe
2025-02-08 08:35:04,966:INFO:Initializing SVM - Linear Kernel
2025-02-08 08:35:04,966:INFO:Total runtime is 2.4680992285410563 minutes
2025-02-08 08:35:04,970:INFO:SubProcess create_model() called ==================================
2025-02-08 08:35:04,970:INFO:Initializing create_model()
2025-02-08 08:35:04,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:35:04,970:INFO:Checking exceptions
2025-02-08 08:35:04,971:INFO:Importing libraries
2025-02-08 08:35:04,971:INFO:Copying training dataset
2025-02-08 08:35:05,321:INFO:Defining folds
2025-02-08 08:35:05,321:INFO:Declaring metric variables
2025-02-08 08:35:05,325:INFO:Importing untrained model
2025-02-08 08:35:05,330:INFO:SVM - Linear Kernel Imported successfully
2025-02-08 08:35:05,337:INFO:Starting cross validation
2025-02-08 08:35:05,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:35:20,163:INFO:Calculating mean and std
2025-02-08 08:35:20,164:INFO:Creating metrics dataframe
2025-02-08 08:35:20,166:INFO:Uploading results into container
2025-02-08 08:35:20,166:INFO:Uploading model into container now
2025-02-08 08:35:20,168:INFO:_master_model_container: 5
2025-02-08 08:35:20,168:INFO:_display_container: 2
2025-02-08 08:35:20,169:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6672, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-08 08:35:20,169:INFO:create_model() successfully completed......................................
2025-02-08 08:35:20,261:INFO:SubProcess create_model() end ==================================
2025-02-08 08:35:20,261:INFO:Creating metrics dataframe
2025-02-08 08:35:20,271:INFO:Initializing Ridge Classifier
2025-02-08 08:35:20,271:INFO:Total runtime is 2.7231773177782697 minutes
2025-02-08 08:35:20,277:INFO:SubProcess create_model() called ==================================
2025-02-08 08:35:20,277:INFO:Initializing create_model()
2025-02-08 08:35:20,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:35:20,277:INFO:Checking exceptions
2025-02-08 08:35:20,277:INFO:Importing libraries
2025-02-08 08:35:20,277:INFO:Copying training dataset
2025-02-08 08:35:20,662:INFO:Defining folds
2025-02-08 08:35:20,663:INFO:Declaring metric variables
2025-02-08 08:35:20,668:INFO:Importing untrained model
2025-02-08 08:35:20,672:INFO:Ridge Classifier Imported successfully
2025-02-08 08:35:20,681:INFO:Starting cross validation
2025-02-08 08:35:20,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:35:32,294:INFO:Calculating mean and std
2025-02-08 08:35:32,295:INFO:Creating metrics dataframe
2025-02-08 08:35:32,297:INFO:Uploading results into container
2025-02-08 08:35:32,298:INFO:Uploading model into container now
2025-02-08 08:35:32,298:INFO:_master_model_container: 6
2025-02-08 08:35:32,298:INFO:_display_container: 2
2025-02-08 08:35:32,298:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6672, solver='auto',
                tol=0.0001)
2025-02-08 08:35:32,299:INFO:create_model() successfully completed......................................
2025-02-08 08:35:32,398:INFO:SubProcess create_model() end ==================================
2025-02-08 08:35:32,398:INFO:Creating metrics dataframe
2025-02-08 08:35:32,407:INFO:Initializing Random Forest Classifier
2025-02-08 08:35:32,407:INFO:Total runtime is 2.9254528403282167 minutes
2025-02-08 08:35:32,412:INFO:SubProcess create_model() called ==================================
2025-02-08 08:35:32,412:INFO:Initializing create_model()
2025-02-08 08:35:32,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:35:32,413:INFO:Checking exceptions
2025-02-08 08:35:32,413:INFO:Importing libraries
2025-02-08 08:35:32,413:INFO:Copying training dataset
2025-02-08 08:35:32,861:INFO:Defining folds
2025-02-08 08:35:32,861:INFO:Declaring metric variables
2025-02-08 08:35:32,866:INFO:Importing untrained model
2025-02-08 08:35:32,869:INFO:Random Forest Classifier Imported successfully
2025-02-08 08:35:32,878:INFO:Starting cross validation
2025-02-08 08:35:32,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:40:23,352:INFO:Calculating mean and std
2025-02-08 08:40:23,355:INFO:Creating metrics dataframe
2025-02-08 08:40:23,359:INFO:Uploading results into container
2025-02-08 08:40:23,360:INFO:Uploading model into container now
2025-02-08 08:40:23,361:INFO:_master_model_container: 7
2025-02-08 08:40:23,362:INFO:_display_container: 2
2025-02-08 08:40:23,362:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6672, verbose=0,
                       warm_start=False)
2025-02-08 08:40:23,363:INFO:create_model() successfully completed......................................
2025-02-08 08:40:23,525:INFO:SubProcess create_model() end ==================================
2025-02-08 08:40:23,526:INFO:Creating metrics dataframe
2025-02-08 08:40:23,542:INFO:Initializing Quadratic Discriminant Analysis
2025-02-08 08:40:23,543:INFO:Total runtime is 7.777711923917135 minutes
2025-02-08 08:40:23,550:INFO:SubProcess create_model() called ==================================
2025-02-08 08:40:23,551:INFO:Initializing create_model()
2025-02-08 08:40:23,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:40:23,551:INFO:Checking exceptions
2025-02-08 08:40:23,551:INFO:Importing libraries
2025-02-08 08:40:23,551:INFO:Copying training dataset
2025-02-08 08:40:24,215:INFO:Defining folds
2025-02-08 08:40:24,215:INFO:Declaring metric variables
2025-02-08 08:40:24,221:INFO:Importing untrained model
2025-02-08 08:40:24,229:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-08 08:40:24,239:INFO:Starting cross validation
2025-02-08 08:40:24,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:40:38,712:INFO:Calculating mean and std
2025-02-08 08:40:38,714:INFO:Creating metrics dataframe
2025-02-08 08:40:38,716:INFO:Uploading results into container
2025-02-08 08:40:38,717:INFO:Uploading model into container now
2025-02-08 08:40:38,717:INFO:_master_model_container: 8
2025-02-08 08:40:38,717:INFO:_display_container: 2
2025-02-08 08:40:38,718:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-08 08:40:38,718:INFO:create_model() successfully completed......................................
2025-02-08 08:40:38,844:INFO:SubProcess create_model() end ==================================
2025-02-08 08:40:38,844:INFO:Creating metrics dataframe
2025-02-08 08:40:38,855:INFO:Initializing Ada Boost Classifier
2025-02-08 08:40:38,856:INFO:Total runtime is 8.032932794094085 minutes
2025-02-08 08:40:38,860:INFO:SubProcess create_model() called ==================================
2025-02-08 08:40:38,861:INFO:Initializing create_model()
2025-02-08 08:40:38,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:40:38,861:INFO:Checking exceptions
2025-02-08 08:40:38,861:INFO:Importing libraries
2025-02-08 08:40:38,861:INFO:Copying training dataset
2025-02-08 08:40:39,490:INFO:Defining folds
2025-02-08 08:40:39,490:INFO:Declaring metric variables
2025-02-08 08:40:39,497:INFO:Importing untrained model
2025-02-08 08:40:39,501:INFO:Ada Boost Classifier Imported successfully
2025-02-08 08:40:39,513:INFO:Starting cross validation
2025-02-08 08:40:39,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:40:49,045:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:49,274:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:49,358:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:49,499:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:49,670:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:49,707:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:51,233:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:51,357:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:51,678:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:40:51,694:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-08 08:42:39,665:INFO:Calculating mean and std
2025-02-08 08:42:39,666:INFO:Creating metrics dataframe
2025-02-08 08:42:39,667:INFO:Uploading results into container
2025-02-08 08:42:39,668:INFO:Uploading model into container now
2025-02-08 08:42:39,670:INFO:_master_model_container: 9
2025-02-08 08:42:39,670:INFO:_display_container: 2
2025-02-08 08:42:39,671:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6672)
2025-02-08 08:42:39,671:INFO:create_model() successfully completed......................................
2025-02-08 08:42:39,770:INFO:SubProcess create_model() end ==================================
2025-02-08 08:42:39,770:INFO:Creating metrics dataframe
2025-02-08 08:42:39,779:INFO:Initializing Gradient Boosting Classifier
2025-02-08 08:42:39,779:INFO:Total runtime is 10.048316629727681 minutes
2025-02-08 08:42:39,782:INFO:SubProcess create_model() called ==================================
2025-02-08 08:42:39,783:INFO:Initializing create_model()
2025-02-08 08:42:39,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:42:39,783:INFO:Checking exceptions
2025-02-08 08:42:39,783:INFO:Importing libraries
2025-02-08 08:42:39,783:INFO:Copying training dataset
2025-02-08 08:42:40,159:INFO:Defining folds
2025-02-08 08:42:40,159:INFO:Declaring metric variables
2025-02-08 08:42:40,167:INFO:Importing untrained model
2025-02-08 08:42:40,174:INFO:Gradient Boosting Classifier Imported successfully
2025-02-08 08:42:40,189:INFO:Starting cross validation
2025-02-08 08:42:40,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:50:16,323:INFO:Calculating mean and std
2025-02-08 08:50:16,324:INFO:Creating metrics dataframe
2025-02-08 08:50:16,325:INFO:Uploading results into container
2025-02-08 08:50:16,326:INFO:Uploading model into container now
2025-02-08 08:50:16,326:INFO:_master_model_container: 10
2025-02-08 08:50:16,326:INFO:_display_container: 2
2025-02-08 08:50:16,327:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6672, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-08 08:50:16,327:INFO:create_model() successfully completed......................................
2025-02-08 08:50:16,421:INFO:SubProcess create_model() end ==================================
2025-02-08 08:50:16,421:INFO:Creating metrics dataframe
2025-02-08 08:50:16,431:INFO:Initializing Linear Discriminant Analysis
2025-02-08 08:50:16,431:INFO:Total runtime is 17.6591890335083 minutes
2025-02-08 08:50:16,435:INFO:SubProcess create_model() called ==================================
2025-02-08 08:50:16,435:INFO:Initializing create_model()
2025-02-08 08:50:16,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:50:16,435:INFO:Checking exceptions
2025-02-08 08:50:16,435:INFO:Importing libraries
2025-02-08 08:50:16,435:INFO:Copying training dataset
2025-02-08 08:50:16,807:INFO:Defining folds
2025-02-08 08:50:16,807:INFO:Declaring metric variables
2025-02-08 08:50:16,811:INFO:Importing untrained model
2025-02-08 08:50:16,817:INFO:Linear Discriminant Analysis Imported successfully
2025-02-08 08:50:16,824:INFO:Starting cross validation
2025-02-08 08:50:16,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:50:30,751:INFO:Calculating mean and std
2025-02-08 08:50:30,752:INFO:Creating metrics dataframe
2025-02-08 08:50:30,755:INFO:Uploading results into container
2025-02-08 08:50:30,756:INFO:Uploading model into container now
2025-02-08 08:50:30,757:INFO:_master_model_container: 11
2025-02-08 08:50:30,757:INFO:_display_container: 2
2025-02-08 08:50:30,757:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-08 08:50:30,758:INFO:create_model() successfully completed......................................
2025-02-08 08:50:30,920:INFO:SubProcess create_model() end ==================================
2025-02-08 08:50:30,920:INFO:Creating metrics dataframe
2025-02-08 08:50:30,936:INFO:Initializing Extra Trees Classifier
2025-02-08 08:50:30,936:INFO:Total runtime is 17.900930937131246 minutes
2025-02-08 08:50:30,941:INFO:SubProcess create_model() called ==================================
2025-02-08 08:50:30,942:INFO:Initializing create_model()
2025-02-08 08:50:30,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:50:30,942:INFO:Checking exceptions
2025-02-08 08:50:30,942:INFO:Importing libraries
2025-02-08 08:50:30,942:INFO:Copying training dataset
2025-02-08 08:50:31,450:INFO:Defining folds
2025-02-08 08:50:31,450:INFO:Declaring metric variables
2025-02-08 08:50:31,456:INFO:Importing untrained model
2025-02-08 08:50:31,462:INFO:Extra Trees Classifier Imported successfully
2025-02-08 08:50:31,472:INFO:Starting cross validation
2025-02-08 08:50:31,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:54:53,675:INFO:Calculating mean and std
2025-02-08 08:54:53,677:INFO:Creating metrics dataframe
2025-02-08 08:54:53,677:INFO:Uploading results into container
2025-02-08 08:54:53,680:INFO:Uploading model into container now
2025-02-08 08:54:53,680:INFO:_master_model_container: 12
2025-02-08 08:54:53,681:INFO:_display_container: 2
2025-02-08 08:54:53,681:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6672, verbose=0,
                     warm_start=False)
2025-02-08 08:54:53,681:INFO:create_model() successfully completed......................................
2025-02-08 08:54:53,760:INFO:SubProcess create_model() end ==================================
2025-02-08 08:54:53,760:INFO:Creating metrics dataframe
2025-02-08 08:54:53,760:INFO:Initializing Light Gradient Boosting Machine
2025-02-08 08:54:53,760:INFO:Total runtime is 22.281333533922833 minutes
2025-02-08 08:54:53,776:INFO:SubProcess create_model() called ==================================
2025-02-08 08:54:53,776:INFO:Initializing create_model()
2025-02-08 08:54:53,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:54:53,776:INFO:Checking exceptions
2025-02-08 08:54:53,776:INFO:Importing libraries
2025-02-08 08:54:53,776:INFO:Copying training dataset
2025-02-08 08:54:54,127:INFO:Defining folds
2025-02-08 08:54:54,127:INFO:Declaring metric variables
2025-02-08 08:54:54,131:INFO:Importing untrained model
2025-02-08 08:54:54,135:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-08 08:54:54,141:INFO:Starting cross validation
2025-02-08 08:54:54,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:55:24,137:INFO:Calculating mean and std
2025-02-08 08:55:24,138:INFO:Creating metrics dataframe
2025-02-08 08:55:24,139:INFO:Uploading results into container
2025-02-08 08:55:24,140:INFO:Uploading model into container now
2025-02-08 08:55:24,140:INFO:_master_model_container: 13
2025-02-08 08:55:24,140:INFO:_display_container: 2
2025-02-08 08:55:24,141:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6672, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-08 08:55:24,141:INFO:create_model() successfully completed......................................
2025-02-08 08:55:24,237:INFO:SubProcess create_model() end ==================================
2025-02-08 08:55:24,237:INFO:Creating metrics dataframe
2025-02-08 08:55:24,237:INFO:Initializing Dummy Classifier
2025-02-08 08:55:24,253:INFO:Total runtime is 22.78955082098643 minutes
2025-02-08 08:55:24,253:INFO:SubProcess create_model() called ==================================
2025-02-08 08:55:24,253:INFO:Initializing create_model()
2025-02-08 08:55:24,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160373C7150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:55:24,253:INFO:Checking exceptions
2025-02-08 08:55:24,253:INFO:Importing libraries
2025-02-08 08:55:24,253:INFO:Copying training dataset
2025-02-08 08:55:24,617:INFO:Defining folds
2025-02-08 08:55:24,617:INFO:Declaring metric variables
2025-02-08 08:55:24,621:INFO:Importing untrained model
2025-02-08 08:55:24,624:INFO:Dummy Classifier Imported successfully
2025-02-08 08:55:24,624:INFO:Starting cross validation
2025-02-08 08:55:24,624:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 08:55:34,002:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,098:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,114:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,125:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,183:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,210:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,210:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,223:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,227:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,237:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-08 08:55:34,448:INFO:Calculating mean and std
2025-02-08 08:55:34,448:INFO:Creating metrics dataframe
2025-02-08 08:55:34,448:INFO:Uploading results into container
2025-02-08 08:55:34,448:INFO:Uploading model into container now
2025-02-08 08:55:34,448:INFO:_master_model_container: 14
2025-02-08 08:55:34,448:INFO:_display_container: 2
2025-02-08 08:55:34,448:INFO:DummyClassifier(constant=None, random_state=6672, strategy='prior')
2025-02-08 08:55:34,448:INFO:create_model() successfully completed......................................
2025-02-08 08:55:34,542:INFO:SubProcess create_model() end ==================================
2025-02-08 08:55:34,542:INFO:Creating metrics dataframe
2025-02-08 08:55:34,575:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-08 08:55:34,592:INFO:Initializing create_model()
2025-02-08 08:55:34,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 08:55:34,592:INFO:Checking exceptions
2025-02-08 08:55:34,594:INFO:Importing libraries
2025-02-08 08:55:34,594:INFO:Copying training dataset
2025-02-08 08:55:34,923:INFO:Defining folds
2025-02-08 08:55:34,923:INFO:Declaring metric variables
2025-02-08 08:55:34,923:INFO:Importing untrained model
2025-02-08 08:55:34,923:INFO:Declaring custom model
2025-02-08 08:55:34,923:INFO:Decision Tree Classifier Imported successfully
2025-02-08 08:55:34,923:INFO:Cross validation set to False
2025-02-08 08:55:34,923:INFO:Fitting Model
2025-02-08 08:55:42,857:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 08:55:42,857:INFO:create_model() successfully completed......................................
2025-02-08 08:55:42,967:INFO:_master_model_container: 14
2025-02-08 08:55:42,967:INFO:_display_container: 2
2025-02-08 08:55:42,967:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 08:55:42,967:INFO:compare_models() successfully completed......................................
2025-02-08 09:01:21,332:INFO:Initializing create_model()
2025-02-08 09:01:21,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 09:01:21,332:INFO:Checking exceptions
2025-02-08 09:01:21,354:INFO:Importing libraries
2025-02-08 09:01:21,355:INFO:Copying training dataset
2025-02-08 09:01:21,735:INFO:Defining folds
2025-02-08 09:01:21,735:INFO:Declaring metric variables
2025-02-08 09:01:21,737:INFO:Importing untrained model
2025-02-08 09:01:21,737:INFO:Declaring custom model
2025-02-08 09:01:21,744:INFO:Decision Tree Classifier Imported successfully
2025-02-08 09:01:21,752:INFO:Starting cross validation
2025-02-08 09:01:21,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-08 09:01:44,647:INFO:Calculating mean and std
2025-02-08 09:01:44,648:INFO:Creating metrics dataframe
2025-02-08 09:01:44,654:INFO:Finalizing model
2025-02-08 09:01:52,808:INFO:Uploading results into container
2025-02-08 09:01:52,809:INFO:Uploading model into container now
2025-02-08 09:01:52,819:INFO:_master_model_container: 15
2025-02-08 09:01:52,819:INFO:_display_container: 3
2025-02-08 09:01:52,819:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 09:01:52,820:INFO:create_model() successfully completed......................................
2025-02-08 09:22:13,759:INFO:Initializing evaluate_model()
2025-02-08 09:22:13,759:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-08 09:22:13,908:INFO:Initializing plot_model()
2025-02-08 09:22:13,908:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:13,908:INFO:Checking exceptions
2025-02-08 09:22:14,026:INFO:Preloading libraries
2025-02-08 09:22:14,027:INFO:Copying training dataset
2025-02-08 09:22:14,027:INFO:Plot type: pipeline
2025-02-08 09:22:14,551:INFO:Visual Rendered Successfully
2025-02-08 09:22:14,639:INFO:plot_model() successfully completed......................................
2025-02-08 09:22:17,750:INFO:Initializing plot_model()
2025-02-08 09:22:17,750:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:17,750:INFO:Checking exceptions
2025-02-08 09:22:17,866:INFO:Preloading libraries
2025-02-08 09:22:17,867:INFO:Copying training dataset
2025-02-08 09:22:17,867:INFO:Plot type: auc
2025-02-08 09:22:18,844:INFO:Fitting Model
2025-02-08 09:22:18,884:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 09:22:18,908:INFO:Scoring test/hold-out set
2025-02-08 09:22:19,198:INFO:Visual Rendered Successfully
2025-02-08 09:22:19,288:INFO:plot_model() successfully completed......................................
2025-02-08 09:22:21,492:INFO:Initializing plot_model()
2025-02-08 09:22:21,492:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:21,492:INFO:Checking exceptions
2025-02-08 09:22:21,608:INFO:Preloading libraries
2025-02-08 09:22:21,609:INFO:Copying training dataset
2025-02-08 09:22:21,609:INFO:Plot type: confusion_matrix
2025-02-08 09:22:22,547:INFO:Fitting Model
2025-02-08 09:22:22,548:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 09:22:22,572:INFO:Scoring test/hold-out set
2025-02-08 09:22:22,836:INFO:Visual Rendered Successfully
2025-02-08 09:22:22,930:INFO:plot_model() successfully completed......................................
2025-02-08 09:22:30,611:INFO:Initializing plot_model()
2025-02-08 09:22:30,611:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:30,611:INFO:Checking exceptions
2025-02-08 09:22:30,728:INFO:Preloading libraries
2025-02-08 09:22:30,728:INFO:Copying training dataset
2025-02-08 09:22:30,728:INFO:Plot type: pr
2025-02-08 09:22:31,660:INFO:Fitting Model
2025-02-08 09:22:31,711:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 09:22:31,734:INFO:Scoring test/hold-out set
2025-02-08 09:22:31,968:INFO:Visual Rendered Successfully
2025-02-08 09:22:32,063:INFO:plot_model() successfully completed......................................
2025-02-08 09:22:38,530:INFO:Initializing plot_model()
2025-02-08 09:22:38,530:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:38,530:INFO:Checking exceptions
2025-02-08 09:22:38,647:INFO:Preloading libraries
2025-02-08 09:22:38,647:INFO:Copying training dataset
2025-02-08 09:22:38,647:INFO:Plot type: parameter
2025-02-08 09:22:38,650:INFO:Visual Rendered Successfully
2025-02-08 09:22:38,731:INFO:plot_model() successfully completed......................................
2025-02-08 09:22:40,677:INFO:Initializing plot_model()
2025-02-08 09:22:40,677:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=rfe, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 09:22:40,677:INFO:Checking exceptions
2025-02-08 09:22:40,793:INFO:Preloading libraries
2025-02-08 09:22:40,794:INFO:Copying training dataset
2025-02-08 09:22:40,794:INFO:Plot type: rfe
2025-02-08 09:22:41,809:INFO:Fitting Model
2025-02-08 10:13:18,946:INFO:Visual Rendered Successfully
2025-02-08 10:13:19,129:INFO:plot_model() successfully completed......................................
2025-02-08 10:13:19,144:INFO:Initializing plot_model()
2025-02-08 10:13:19,145:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:13:19,145:INFO:Checking exceptions
2025-02-08 10:13:19,330:INFO:Preloading libraries
2025-02-08 10:13:19,331:INFO:Copying training dataset
2025-02-08 10:13:19,331:INFO:Plot type: feature
2025-02-08 10:13:19,331:WARNING:No coef_ found. Trying feature_importances_
2025-02-08 10:13:19,804:INFO:Visual Rendered Successfully
2025-02-08 10:13:19,889:INFO:plot_model() successfully completed......................................
2025-02-08 10:51:09,447:INFO:Initializing plot_model()
2025-02-08 10:51:09,447:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:51:09,447:INFO:Checking exceptions
2025-02-08 10:51:09,572:INFO:Preloading libraries
2025-02-08 10:51:09,573:INFO:Copying training dataset
2025-02-08 10:51:09,573:INFO:Plot type: feature_all
2025-02-08 10:51:09,918:WARNING:No coef_ found. Trying feature_importances_
2025-02-08 10:51:10,346:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2025-02-08 10:51:10,347:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2025-02-08 10:51:10,370:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\patches.py:739: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2025-02-08 10:51:10,386:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\transforms.py:2050: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2025-02-08 10:51:10,416:INFO:Visual Rendered Successfully
2025-02-08 10:51:10,526:INFO:plot_model() successfully completed......................................
2025-02-08 10:51:12,919:INFO:Initializing plot_model()
2025-02-08 10:51:12,919:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:51:12,919:INFO:Checking exceptions
2025-02-08 10:51:13,040:INFO:Preloading libraries
2025-02-08 10:51:13,040:INFO:Copying training dataset
2025-02-08 10:51:13,041:INFO:Plot type: feature
2025-02-08 10:51:13,041:WARNING:No coef_ found. Trying feature_importances_
2025-02-08 10:51:13,503:INFO:Visual Rendered Successfully
2025-02-08 10:51:13,587:INFO:plot_model() successfully completed......................................
2025-02-08 10:51:50,317:INFO:Initializing plot_model()
2025-02-08 10:51:50,317:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:51:50,317:INFO:Checking exceptions
2025-02-08 10:51:50,433:INFO:Preloading libraries
2025-02-08 10:51:50,433:INFO:Copying training dataset
2025-02-08 10:51:50,434:INFO:Plot type: confusion_matrix
2025-02-08 10:51:51,366:INFO:Fitting Model
2025-02-08 10:51:51,366:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 10:51:51,391:INFO:Scoring test/hold-out set
2025-02-08 10:51:51,644:INFO:Visual Rendered Successfully
2025-02-08 10:51:51,733:INFO:plot_model() successfully completed......................................
2025-02-08 10:51:55,150:INFO:Initializing plot_model()
2025-02-08 10:51:55,150:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:51:55,151:INFO:Checking exceptions
2025-02-08 10:51:55,266:INFO:Preloading libraries
2025-02-08 10:51:55,266:INFO:Copying training dataset
2025-02-08 10:51:55,266:INFO:Plot type: pr
2025-02-08 10:51:56,195:INFO:Fitting Model
2025-02-08 10:51:56,245:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 10:51:56,269:INFO:Scoring test/hold-out set
2025-02-08 10:51:56,504:INFO:Visual Rendered Successfully
2025-02-08 10:51:56,594:INFO:plot_model() successfully completed......................................
2025-02-08 10:52:00,869:INFO:Initializing plot_model()
2025-02-08 10:52:00,869:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=error, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:52:00,869:INFO:Checking exceptions
2025-02-08 10:52:00,984:INFO:Preloading libraries
2025-02-08 10:52:00,984:INFO:Copying training dataset
2025-02-08 10:52:00,984:INFO:Plot type: error
2025-02-08 10:52:01,942:INFO:Fitting Model
2025-02-08 10:52:01,942:WARNING:C:\Users\Matheus\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-02-08 10:52:01,967:INFO:Scoring test/hold-out set
2025-02-08 10:52:02,200:INFO:Visual Rendered Successfully
2025-02-08 10:52:02,292:INFO:plot_model() successfully completed......................................
2025-02-08 10:52:12,235:INFO:Initializing plot_model()
2025-02-08 10:52:12,235:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-08 10:52:12,235:INFO:Checking exceptions
2025-02-08 10:52:12,352:INFO:Preloading libraries
2025-02-08 10:52:12,352:INFO:Copying training dataset
2025-02-08 10:52:12,352:INFO:Plot type: feature
2025-02-08 10:52:12,353:WARNING:No coef_ found. Trying feature_importances_
2025-02-08 10:52:12,784:INFO:Visual Rendered Successfully
2025-02-08 10:52:12,869:INFO:plot_model() successfully completed......................................
2025-02-08 10:55:56,614:INFO:Initializing finalize_model()
2025-02-08 10:55:56,614:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-08 10:55:56,614:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 10:55:56,717:INFO:Initializing create_model()
2025-02-08 10:55:56,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 10:55:56,718:INFO:Checking exceptions
2025-02-08 10:55:56,719:INFO:Importing libraries
2025-02-08 10:55:56,719:INFO:Copying training dataset
2025-02-08 10:55:56,734:INFO:Defining folds
2025-02-08 10:55:56,734:INFO:Declaring metric variables
2025-02-08 10:55:56,735:INFO:Importing untrained model
2025-02-08 10:55:56,735:INFO:Declaring custom model
2025-02-08 10:55:56,735:INFO:Decision Tree Classifier Imported successfully
2025-02-08 10:55:56,737:INFO:Cross validation set to False
2025-02-08 10:55:56,737:INFO:Fitting Model
2025-02-08 10:56:10,039:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 10:56:10,039:INFO:create_model() successfully completed......................................
2025-02-08 10:56:10,127:INFO:_master_model_container: 15
2025-02-08 10:56:10,127:INFO:_display_container: 3
2025-02-08 10:56:10,173:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 10:56:10,173:INFO:finalize_model() successfully completed......................................
2025-02-08 10:56:10,345:INFO:Initializing save_model()
2025-02-08 10:56:10,345:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), model_name=fraud_detection, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-08 10:56:10,345:INFO:Adding model into prep_pipe
2025-02-08 10:56:10,345:WARNING:Only Model saved as it was a pipeline.
2025-02-08 10:56:10,366:INFO:fraud_detection.pkl saved in current working directory
2025-02-08 10:56:10,413:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 10:56:10,413:INFO:save_model() successfully completed......................................
2025-02-08 10:58:16,129:INFO:Initializing load_model()
2025-02-08 10:58:16,129:INFO:load_model(model_name=fraud_detection, platform=None, authentication=None, verbose=True)
2025-02-08 10:58:37,236:INFO:Initializing load_model()
2025-02-08 10:58:37,236:INFO:load_model(model_name=fraud_detection, platform=None, authentication=None, verbose=True)
2025-02-08 10:58:37,316:INFO:Initializing predict_model()
2025-02-08 10:58:37,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160372667A0>)
2025-02-08 10:58:37,317:INFO:Checking exceptions
2025-02-08 10:58:37,317:INFO:Preloading libraries
2025-02-08 10:58:37,319:INFO:Set up data.
2025-02-08 10:58:37,322:INFO:Set up index.
2025-02-08 10:59:38,006:INFO:Initializing load_model()
2025-02-08 10:59:38,006:INFO:load_model(model_name=fraud_detection, platform=None, authentication=None, verbose=True)
2025-02-08 10:59:38,071:INFO:Initializing predict_model()
2025-02-08 10:59:38,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016037266020>)
2025-02-08 10:59:38,071:INFO:Checking exceptions
2025-02-08 10:59:38,071:INFO:Preloading libraries
2025-02-08 10:59:38,073:INFO:Set up data.
2025-02-08 10:59:38,075:INFO:Set up index.
2025-02-08 11:00:30,412:INFO:Initializing finalize_model()
2025-02-08 11:00:30,412:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-08 11:00:30,413:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 11:00:30,502:INFO:Initializing create_model()
2025-02-08 11:00:30,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 11:00:30,502:INFO:Checking exceptions
2025-02-08 11:00:30,503:INFO:Importing libraries
2025-02-08 11:00:30,503:INFO:Copying training dataset
2025-02-08 11:00:30,517:INFO:Defining folds
2025-02-08 11:00:30,518:INFO:Declaring metric variables
2025-02-08 11:00:30,518:INFO:Importing untrained model
2025-02-08 11:00:30,518:INFO:Declaring custom model
2025-02-08 11:00:30,518:INFO:Decision Tree Classifier Imported successfully
2025-02-08 11:00:30,520:INFO:Cross validation set to False
2025-02-08 11:00:30,520:INFO:Fitting Model
2025-02-08 11:00:43,603:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:00:43,603:INFO:create_model() successfully completed......................................
2025-02-08 11:00:43,706:INFO:_master_model_container: 15
2025-02-08 11:00:43,706:INFO:_display_container: 3
2025-02-08 11:00:43,752:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:00:43,752:INFO:finalize_model() successfully completed......................................
2025-02-08 11:00:43,938:INFO:Initializing save_model()
2025-02-08 11:00:43,938:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), model_name=/models/fraud_detection, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-08 11:00:43,938:INFO:Adding model into prep_pipe
2025-02-08 11:00:43,939:WARNING:Only Model saved as it was a pipeline.
2025-02-08 11:00:50,995:INFO:Initializing finalize_model()
2025-02-08 11:00:50,995:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-08 11:00:50,995:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 11:00:51,081:INFO:Initializing create_model()
2025-02-08 11:00:51,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 11:00:51,081:INFO:Checking exceptions
2025-02-08 11:00:51,082:INFO:Importing libraries
2025-02-08 11:00:51,082:INFO:Copying training dataset
2025-02-08 11:00:51,096:INFO:Defining folds
2025-02-08 11:00:51,096:INFO:Declaring metric variables
2025-02-08 11:00:51,097:INFO:Importing untrained model
2025-02-08 11:00:51,097:INFO:Declaring custom model
2025-02-08 11:00:51,097:INFO:Decision Tree Classifier Imported successfully
2025-02-08 11:00:51,099:INFO:Cross validation set to False
2025-02-08 11:00:51,099:INFO:Fitting Model
2025-02-08 11:01:07,672:INFO:Initializing finalize_model()
2025-02-08 11:01:07,672:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-08 11:01:07,673:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 11:01:07,758:INFO:Initializing create_model()
2025-02-08 11:01:07,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 11:01:07,759:INFO:Checking exceptions
2025-02-08 11:01:07,760:INFO:Importing libraries
2025-02-08 11:01:07,760:INFO:Copying training dataset
2025-02-08 11:01:07,773:INFO:Defining folds
2025-02-08 11:01:07,773:INFO:Declaring metric variables
2025-02-08 11:01:07,773:INFO:Importing untrained model
2025-02-08 11:01:07,773:INFO:Declaring custom model
2025-02-08 11:01:07,774:INFO:Decision Tree Classifier Imported successfully
2025-02-08 11:01:07,775:INFO:Cross validation set to False
2025-02-08 11:01:07,775:INFO:Fitting Model
2025-02-08 11:01:20,807:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:01:20,807:INFO:create_model() successfully completed......................................
2025-02-08 11:01:20,947:INFO:_master_model_container: 15
2025-02-08 11:01:20,947:INFO:_display_container: 3
2025-02-08 11:01:20,993:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:01:20,993:INFO:finalize_model() successfully completed......................................
2025-02-08 11:01:21,227:INFO:Initializing save_model()
2025-02-08 11:01:21,227:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), model_name=./models/fraud_detection, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-08 11:01:21,227:INFO:Adding model into prep_pipe
2025-02-08 11:01:21,227:WARNING:Only Model saved as it was a pipeline.
2025-02-08 11:01:28,442:INFO:Initializing finalize_model()
2025-02-08 11:01:28,442:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-08 11:01:28,442:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best')
2025-02-08 11:01:28,525:INFO:Initializing create_model()
2025-02-08 11:01:28,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001602D80D410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6672, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-08 11:01:28,525:INFO:Checking exceptions
2025-02-08 11:01:28,526:INFO:Importing libraries
2025-02-08 11:01:28,526:INFO:Copying training dataset
2025-02-08 11:01:28,540:INFO:Defining folds
2025-02-08 11:01:28,540:INFO:Declaring metric variables
2025-02-08 11:01:28,540:INFO:Importing untrained model
2025-02-08 11:01:28,540:INFO:Declaring custom model
2025-02-08 11:01:28,541:INFO:Decision Tree Classifier Imported successfully
2025-02-08 11:01:28,543:INFO:Cross validation set to False
2025-02-08 11:01:28,543:INFO:Fitting Model
2025-02-08 11:01:41,654:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:01:41,654:INFO:create_model() successfully completed......................................
2025-02-08 11:01:41,806:INFO:_master_model_container: 15
2025-02-08 11:01:41,806:INFO:_display_container: 3
2025-02-08 11:01:41,854:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:01:41,854:INFO:finalize_model() successfully completed......................................
2025-02-08 11:01:42,076:INFO:Initializing save_model()
2025-02-08 11:01:42,077:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False), model_name=../models/fraud_detection, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Matheus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
1.0    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-08 11:01:42,077:INFO:Adding model into prep_pipe
2025-02-08 11:01:42,077:WARNING:Only Model saved as it was a pipeline.
2025-02-08 11:01:42,089:INFO:../models/fraud_detection.pkl saved in current working directory
2025-02-08 11:01:42,136:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imput...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6672,
                                        splitter='best'))],
         verbose=False)
2025-02-08 11:01:42,136:INFO:save_model() successfully completed......................................
2025-02-09 12:32:56,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-09 12:32:56,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-09 12:32:56,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-09 12:32:56,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-09 12:33:02,378:INFO:Initializing load_model()
2025-02-09 12:33:02,378:INFO:load_model(model_name=fraud_detection, platform=None, authentication=None, verbose=True)
2025-02-09 12:33:32,480:INFO:Initializing load_model()
2025-02-09 12:33:32,480:INFO:load_model(model_name=../models/fraud_detection, platform=None, authentication=None, verbose=True)
2025-02-09 12:33:32,939:INFO:Initializing predict_model()
2025-02-09 12:33:32,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028A073F07D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['distance_from_home',
                                             'distance_from_last_transaction',
                                             'ratio_to_median_purchase_price'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['repeat_retailer', 'used_chip',
                                             'used_pin_number',
                                             'online_order'],
                                    transformer=SimpleImput...
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64},
                                                                        {'col': 'online_order',
                                                                         'data_type': dtype('float64'),
                                                                         'mapping': 0.0    0
1.0    1
NaN   -1
dtype: int64}]))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE()))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 DecisionTreeClassifier(random_state=6672))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028A09EE9C60>)
2025-02-09 12:33:32,939:INFO:Checking exceptions
2025-02-09 12:33:32,939:INFO:Preloading libraries
2025-02-09 12:33:32,939:INFO:Set up data.
2025-02-09 12:33:32,939:INFO:Set up index.
